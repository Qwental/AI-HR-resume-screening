
services:
  db:
    image: postgres:15
    container_name: ai-hr-db
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - ./db_data:/var/lib/postgresql/data # Используем локальную папку для данных
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - ai_hr_net

  auth:
    build: ./auth
    container_name: ai-hr-auth
    ports:
      - "8080:8080"
    environment:
      - DB_HOST=db # Указываем имя сервиса БД
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_ACCESS_TTL=${JWT_ACCESS_TTL}
      - JWT_REFRESH_TTL=${JWT_REFRESH_TTL}
      - GIN_MODE=${GIN_MODE}
      - RABBITMQ_URL=${RABBITMQ_URL}
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - ai_hr_net
    restart: unless-stopped

  interview:
    build: ./interview
    container_name: ai-hr-interview
    ports:
      - "8081:8081"
    environment:
      # Настройки БД
      - DB_HOST=db
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - AWS_S3_ENDPOINT=http://minio:9000
      - AWS_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=${MINIO_ACCESS_KEY}
      - AWS_SECRET_ACCESS_KEY=${MINIO_SECRET_KEY}
      - AWS_S3_BUCKET=${MINIO_BUCKET}
      # Другие переменные
      - GIN_MODE=${GIN_MODE}
      - RABBITMQ_URL=${RABBITMQ_URL}
      - PORT=8081
    depends_on:
      db:
        condition: service_healthy
      minio:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - ai_hr_net
    restart: unless-stopped


  minio:
    image: minio/minio:latest
    container_name: ai-hr-minio
    command: server /data --console-address ":9001"
    environment:
      # Настраиваем MinIO с помощью тех же ключей
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY}
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - ./minio_data:/data # Используем локальную папку для данных
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - ai_hr_net

  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: ai-hr-rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - ./rabbitmq_data:/var/lib/rabbitmq # Используем локальную папку для данных
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3
    networks:
      - ai_hr_net



networks:
  ai_hr_net:
    driver: bridge
